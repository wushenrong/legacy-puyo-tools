# SPDX-FileCopyrightText: 2025 Samuel Wu
#
# SPDX-License-Identifier: MIT-0

[project]
authors = [{ name = "Samuel Wu", email = "twopizza9621536@gmail.com" }]
dependencies = ["attrs>=25.3.0", "lxml>=6.0.0"]
description = "A tool to edit text for older Puyo Puyo games."
license = "MIT"
license-files = ["LICENSE"]
name = "legacy-puyo-tools"
readme = "README.md"
requires-python = ">=3.13"
version = "0.0.1"

[project.scripts]
legacy-puyo-tools = "legacy_puyo_tools.cli:main"

[tool.ruff]
line-length = 79
output-format = "concise"
# Required for some rules
preview = true

[tool.ruff.lint]
select = [
    "ANN",  # type annotations
    "ARG",  # falke8 unused arguments
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "COM",  # flake8-commas (specifically trailing commas)
    "D",    # pydocstyle
    "DOC",  # pydoclint
    "E",    # Error
    "ERA",  # eradicate commented out code
    "F",    # pyflakes
    "FIX",  # flake8 fixme
    "FURB", # refurb
    "I",    # isort
    "ISC",  # flake8-implicit-str-concat
    "N",    # pep8-naming
    "PERF", # Perflint: performance
    "PGH",  # pygrep-hooks
    "PIE",  # flake8-pie
    "PTH",  # flake8-use-pathlib
    "Q",    # flake8-quotes
    "RUF",  # Ruff specific rules
    "S",    # bandit security checks
    "SIM",  # flake8-simplify
    "UP",   # pyupgrade
    "W",    # Warning
    "YTT",  # flake8-2020
]
typing-modules = ["types-lxml"]

# Disable rules that conflict with the formatter
ignore = ["COM812"]

[tool.ruff.lint.pycodestyle]
max-doc-length = 72

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pylint]
extension-pkg-allow-list = ["lxml"]
max-line-length = 79
output-format = "colorized"
source-roots = ["src"]

[tool.pyright]
include = ["src"]
typeCheckingMode = "strict"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pylint>=3.3.7",
    "pyright>=1.1.403",
    "reuse>=5.0.2",
    "ruff>=0.12.2",
    "types-lxml>=2025.3.30",
]
