# SPDX-FileCopyrightText: 2025 Samuel Wu
#
# SPDX-License-Identifier: MIT
#
# Some of the following code is generated by ChatGPT with modifications.

"""Functions to deal with file operations."""

from __future__ import annotations

import os
from pathlib import Path
from typing import BinaryIO

from legacy_puyo_tools.typing import StrPath


def read_file(path_or_buf: StrPath | BinaryIO) -> bytes:
    """Read a file from a path-like object or file-like object."""
    if isinstance(path_or_buf, (str, os.PathLike)):
        return Path(path_or_buf).read_bytes()

    return path_or_buf.read()


def write_file(path_or_buf: StrPath | BinaryIO, data: bytes) -> None:
    """Write to a file from a path-like object or file-like object."""
    if isinstance(path_or_buf, (str, os.PathLike)):
        Path(path_or_buf).write_bytes(data)
        return

    path_or_buf.write(data)


def get_file_name(path_or_buf: StrPath | BinaryIO) -> str:
    """Return the name of the file from a path or a file-like object."""
    if isinstance(path_or_buf, (str, os.PathLike)):
        return Path(os.fspath(path_or_buf)).name

    return Path(os.fspath(path_or_buf.name)).name
